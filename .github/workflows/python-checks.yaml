name: Python CI

on:
  push:
    paths:
      - '**.py'
      - '**.c'
      - '**.h'
      - '**.cpp'
      - '**.hpp'
      - '**.lock'
      - '**.toml'
      - '**.yaml'
      - '**.yml'
      - '**.ini'
    branches: [ main ]
  pull_request:
    paths:
      - '**.py'
      - '**.c'
      - '**.h'
      - '**.cpp'
      - '**.hpp'
      - '**.lock'
      - '**.toml'
      - '**.yaml'
      - '**.yml'
      - '**.ini'
    branches: [ main ]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.8.3"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
#   checks should not take more than 10 minutes (including build and setup step).
#   If it is the case probably something heavy trespassed to unit tests.
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update CMake
        uses: jwlawson/actions-setup-cmake@v2.0
      - name: Install other deps
        run: sudo apt install -y graphviz
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      - run: (export DISABLE_ABC_CEXT=1 && poetry build --no-interaction)
        env:
          DISABLE_ABC_CEXT: 1
          CMAKE_BUILD_PARALLEL_LEVEL: 8
      - run: (export DISABLE_ABC_CEXT=1 && poetry install --no-interaction)
      - name: mypy
        if: always()
        run: poetry run mypy -p cirbo
      - name: flake8
        if: always()
        run: poetry run flake8 cirbo tests tools
      - name: pytest
        if: always()
        run: poetry run pytest tests -v -m 'not (manual or slow or ABC)'
      - name: usort
        if: always()
        run: poetry run usort check cirbo tests tools
      - name: docformatter
        if: always()
        run: poetry run docformatter --check --diff cirbo/ tests/ tools/
      - name: black
        if: always()
        run: poetry run black --check --diff cirbo/ tests/ tools/
